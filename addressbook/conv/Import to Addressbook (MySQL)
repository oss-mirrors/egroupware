<?php
// This file defines a set of functions and an associative array.
// The key of the array corresponds to a header in the source
// outlook file and the value of the array item will be used in
// the creation of the output file.
//
// An exported Outlook file looks like this:
//
// Title<tab>First Name<tab>Middle Name<tab>Last Name<tab>...
// <tab>Patrick<tab><tab>Walsh<tab>...
//
// Where the first line explains each optional field.  This is what
// will be looked up in the key.
//
// The array need not be in any order and any fields not defined will
// not be transferred.  If the val='+', the value will be appended to
// the previous field and any text after the '+' will be appended 
// before the value.  For example, the following would add a comma and
// a space between LastName and FirstName and store it in FullName:
//
//	array("LastName" => "FullName","FirstName" => "+, ");
//
// Also start with a '#' symbol and a comma separated list will be
// turned into a number of the same entries.

class outlook_conv {
  var $currentrecord; //used for buffering to allow uid lines to go first

  var $outlook = array(
	"Title" => "", 
	"First Name" => "ab_firstname",
	"Middle Name" => "",
	"Last Name" => "ab_lastname",
	"Suffix" => "",
	"Company" => "ab_company",  //objectclass: organization
	"Department" => "", //objectclass: organizationalPerson
	"Job Title" => "ab_title", //objectclass: organizationalPerson
	"Business Street" => "ab_address2",
	"Business Street 2" => "",
	"Business Street 3" => "",
	"Business City" => "",
	"Business State" => "",
	"Business Postal Code" => "",
	"Business Country" => "",
	"Home Street" => "ab_street",
	"Home City" => "ab_city",
	"Home State" => "ab_state",
	"Home Postal Code" => "ab_zip",
	"Home Country" => "",
	"Home Street 2" => "",
	"Home Street 3" => "",
	"Other Street" => "",
	"Other City" => "",
	"Other State" => "",
	"Other Postal Code" => "",
	"Other Country" => "",
	"Assistant's Phone" => "",
	"Business Fax" => "ab_fax",
	"Business Phone" => "ab_wphone",
	"Business Phone 2" => "ab_ophone",
	"Callback" => "",
	"Car Phone" => "",
	"Company Main Phone" => "",
	"Home Fax" => "",
	"Home Phone" => "ab_hphone",
	"Home Phone 2" => "", //This will make another homePhone entry
	"ISDN" => "",
	"Mobile Phone" => "ab_mphone", //newPilotPerson
	"Other Fax" => "",
	"Other Phone" => "",
	"Pager" => "ab_pager",
	"Primary Phone" => "",
	"Radio Phone" => "",
	"TTY/TDD Phone" => "",
	"Telex" => "", //organization
	"Account" => "",
	"Anniversary" => "",
	"Assistant's Name" => "", //newPilotPerson
	"Billing Information" => "",
	"Birthday" => "ab_bday",
	"Categories" => "", 
	"Children" => "",
	"Directory Server" => "",
	"E-mail Address" => "ab_email",
	"E-mail Display Name" => "",
	"E-mail 2 Address" => "",
	"E-mail 2 Display Name" => "",
	"E-mail 3 Address" => "", //add another...
	"E-mail 3 Display Name" => "",
	"Gender" => "",
	"Government ID Number" => "",
	"Hobby" => "",
	"Initials" => "",
	"Internet Free Busy" => "",
	"Keywords" => "",
	"Language" => "",
	"Location" => "",
	"Manager's Name" => "",
	"Mileage" => "",
        "Notes" => "ab_notes",
	"Office Location" => "",
	"Organizational ID Number" => "",
	"PO Box" => "postOfficeBox",
	"Priority" => "",
	"Private Profession" => "",
	"Referred By" => "",
	"Sensitivity" => "",
	"Spouse" => "",
	"User 1" => "",
	"User 2" => "",
	"User 3" => "",
	"User 4" => "",
	"Web Page" => "");

function outlook_start_file($buffer,$j="",$k="") {
  return $buffer;
}

function outlook_end_file($buffer) {
  global $phpgw;
  global $phpgw_info;
  
  $lines = split("\n",$buffer);

  for ($i=0;$i<count($lines);$i++) {
    $sql=$lines[$i];
    $phpgw->db->query($sql);
  }
  
  return "Successfully imported $i records into your addressbook.";
}

function outlook_start_record($buffer) {
  $top="";

  $this->currentrecord = $top;
  return $buffer;
}

function outlook_end_record($buffer,$private="private") {
  global $phpgw_info;
  $row=0;
  $i=0;
  $lines = split("##",$this->currentrecord);
  
  # Commence the ugly parsing of csv into sql
  for ($i=0;$i<count($lines)-1;$i++) {
    list($name, $value) = split("%%",$lines[$i]);
    $row++;
    if ($row==1) {
      if (!empty($name) && !empty($value)) {
        if (count($lines)>2) {
          $thisname=$name.",";
          $thisvalu="'".$value."',";
        } else {
	  $thisname=$name.") ";
	  $thisvalu="'".$value."');";
        }
      } else {
        $thisname="";
	$thisvalu="";
      }
      $namelist = $namelist."\nINSERT INTO addressbook (ab_owner,ab_access,".$thisname;
      $valulist = $valulist."VALUES ('".$phpgw_info["user"]["account_id"]."','".$private."',".$thisvalu;
    } elseif ($row==count($lines)-1) {
      if (!empty($name) && !empty($value)) {
        $thisname=$name.") ";
        $thisvalu="'".$value."');";
      } else {
        $thisname="";
	$thisvalu="";
      }
      $namelist = $namelist.$thisname;
      $valulist = $valulist.$thisvalu;
    } else {
      if (!empty($name) && !empty($value)) {
        $thisname=$name.",";
        $thisvalu="'".$value."',";
      } else {
        $thisname=",";
	$thisvalu=",";
      }
      $namelist = $namelist.$thisname;
      $valulist = $valulist.$thisvalu;
    }
  }
  
  return $buffer.$namelist.$valulist;
}

function outlook_new_attrib($buffer,$name,$value) {
  $value = str_replace("\n","<BR>",$value);
  $value = str_replace("\r","",$value);
  if ($value=="") { $value="NULL"; }
  $this->currentrecord .= $name."%%".addslashes($value)."##";
  
  return $buffer;
}
}
?>
