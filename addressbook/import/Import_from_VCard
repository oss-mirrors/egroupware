<?php
// This file defines a set of functions and an associative array.
// The key of the array corresponds to a header in the source
// import file and the value of the array item will be used in
// the creation of the output file.
//
// An exported Outlook file looks like this:
//
// Title<tab>First Name<tab>Middle Name<tab>Last Name<tab>...
// <tab>Patrick<tab><tab>Walsh<tab>...
//
// Where the first line explains each optional field.  This is what
// will be looked up in the key.
//
// The array need not be in any order and any fields not defined will
// not be transferred.  If the val='+', the value will be appended to
// the previous field and any text after the '+' will be appended 
// before the value.  For example, the following would add a comma and
// a space between LastName and FirstName and store it in FullName:
//
//	array("LastName" => "FullName","FirstName" => "+, ");
//
// Also start with a '#' symbol and a comma separated list will be
// turned into a number of the same entries.

	class import_conv
	{
		var $currentrecord = array(); //used for buffering to allow uid lines to go first
		var $id;
		var $type = 'vcard';

		var $import = array(
			"n"        => "n",
			"sound"    => "sound",
			"bday"     => "bday",
			"note"     => "note",
			"tz"       => "tz",
			"geo"      => "geo",
			"url"      => "url",
			"pubkey"   => "pubkey",
			"org"      => "org",
			"title"    => "title",
			"adr"      => "adr",
			"label"    => "label",
			"tel"      => "tel",
			"email"    => "email"
		);

		function import_start_file($buffer,$j="",$k="") {
			$this->id = 0;
			return $buffer;
		}

		function import_start_record($buffer) {
			++$this->id;
			$this->currentrecord = array();
			return $buffer;
		}

		function import_new_attrib($buffer,$name,$value) {
			$value = trim($value);
			$value = ereg_replace("=0D=0A","\n",$value);
			//echo '<br>'.$this->id.": ".$name.' => '.$value;
			$this->currentrecord += array($name => $value);

			return $buffer;
		}

		function import_end_record($buffer,$private="private") {
			global $phpgw_info;
			$buffer[$this->id]="";
			while ( list($name, $value) = each($this->currentrecord)) {
				$buffer[$this->id][$name] = $value;
				//$buffer[$this->id]["private"] = $private;
				//echo '<br>'.$name.' => '.$value;
			}
			return $buffer;
		}

		function import_end_file($buffer) {
			global $phpgw,$phpgw_info;

			$contacts = CreateObject("phpgwapi.contacts");
			$vcard    = CreateObject("phpgwapi.vcard");

			for ($i=1;$i<=count($buffer);$i++) {
				// Send the entire array to the vcard class in function.
				// It will parse the vcard fields and clean the array of extra
				// bogus values that get stuffed in.
				$entry = $vcard->in($buffer[$i]);
				// Now actually add the new entry
				$contacts->add($phpgw_info["user"]["account_id"],$entry);
			}
			$num = $i - 1;
			return "Successfully imported $num records into your addressbook.";
		}
	}
?>
