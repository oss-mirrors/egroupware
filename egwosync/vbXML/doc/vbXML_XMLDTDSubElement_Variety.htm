<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<meta name="GENERATOR" content="Microsoft&reg; HTML Help Workshop 4.1">
<TITLE>Variety Property</TITLE>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<H1><a name="vbXML_XMLDTDSubElement_Variety"></a>Variety Property</H1>
<P><U><a href="vbXML_XMLDTDSubElement_Properties.htm">See Also</a></U>&nbsp;&nbsp; <U>Example</U>&nbsp;&nbsp; <U><a href="vbXML_XMLDTDSubElement_Intro.htm">Applies To</A></U></P>
<P>Read-Only. A value from the <a href="vbXML_XML_DTDSubElementVarieties.htm">XML_DTDSubElementVarieties</a> enumerated list containing the sub-element Type.</P>
<P class=label>Syntax</P>
<p><i>object</i>.<b>Variety</b>
<p>The object placeholder represents an <A href="vbXML_XMLDTDSubElement_Intro.htm">XMLDTDSubElement</A> object.
<P class=label>Settings</P>
<p>See the <a href="vbXML_XML_DTDSubElementRules.htm">XML_DTDSubElementRules</a> enumerated list topic.</p>
<P class=label>Remarks</P>
<p>This property should more properly be called "Type", however, Type is a reserved word in VB and therefore cannot be used.</p>
<P class=label>Background</P>
<p>A DTD Element declaration can have a number of sub-elements. These sub-elements will either be a sub-node declaration or a #PCDATA declaration.
The following example has two sub-elements with the two different sub-element types :</p>
<pre><code>&lt;!ELEMENT element1 (subelement2 | #PCDATA)&gt;</code></pre>

</BODY>
</HTML>
