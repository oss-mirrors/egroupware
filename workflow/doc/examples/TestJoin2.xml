<process>
  <name>TestJoin2</name>
  <isValid>y</isValid>
  <version>1.2</version>
  <isActive>n</isActive>
   <description>Testing join activities</description>
  <lastModif>14/06/2005 [04:22:58]</lastModif>
  <sharedCode><![CDATA[<?php
//***************************************************************************
//* copyleft Regis Leroy at glconseil dot com                               *
//* This program is free software; you can redistribute it and/or modify it *
//*  under the terms of the GNU General Public License as published by the  *
//*  Free Software Foundation; either version 2 of the License, or (at your *
//*  option) any later version.                                             *
//***************************************************************************
?>  ]]></sharedCode>
  <configs>
    <config>
      <wf_config_name>use_automatic_parsing</wf_config_name>
      <wf_config_value></wf_config_value>
      <wf_config_value_int>1</wf_config_value_int>
    </config>
    <config>
      <wf_config_name>show_activity_title</wf_config_name>
      <wf_config_value></wf_config_value>
      <wf_config_value_int>1</wf_config_value_int>
    </config>
    <config>
      <wf_config_name>show_multiple_submit_as_select</wf_config_name>
      <wf_config_value></wf_config_value>
      <wf_config_value_int>0</wf_config_value_int>
    </config>
    <config>
      <wf_config_name>draw_roles</wf_config_name>
      <wf_config_value></wf_config_value>
      <wf_config_value_int>1</wf_config_value_int>
    </config>
    <config>
      <wf_config_name>font_size</wf_config_name>
      <wf_config_value>25</wf_config_value>
      <wf_config_value_int></wf_config_value_int>
    </config>
  </configs>
  <activities>
    <activity>
      <name>Report</name>
      <type>standalone</type>
      <description>standalone activity used to make a report of the tests</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>y</isInteractive>
      <isAutoRouted>n</isAutoRouted>
      <roles>
        <role>Role1</role>
      </roles>
      <code><![CDATA[<?php
//! show all instances contained in the list to the table of instances
function report_show_instances(&$mylist, &$template)
{
  $template->set_block('template', 'block_instances_row', 'inst_row');
  foreach ($mylist as $inst)
  {
    $template->set_var(array(
                 'head_inst_name' => tra('inst. name'),
                 'head_inst_priority' => tra('inst. priority'),
                 'head_status' => tra('status'),
                 'head_act_name' => tra('act. name'),
                 'head_user' => tra('user'),
                 'instance_name' => $inst['insname'],
                 'instance_priority' => $inst['wf_priority'],
                 'instance_status' => $inst['wf_status'].'/'.$inst['wf_act_status'],
                 'activity_name' => $inst['wf_name'],
                 'user' => $inst['wf_user'],
                  ));
    $template->parse('inst_row', 'block_instances_row', true);
  }
}

//user commands   ****************
$ActClose = get_var('ActClose','post',false);

//--------------------------------------
//
// handling results from the form
//
//--------------------------------------

if ($ActClose) 
{
 $GLOBALS['workflow']['__leave_activity']=true;
} 
else 
{
//--------------------------------------
//
// showing the form
//
//--------------------------------------

// we want to retrieve a list of all instances ordered by priority
$sort_mode='wf_priority__desc';
$wheres[] = '(gi.wf_p_id='.$GLOBALS['workflow']['wf_process_id'].')';
$wheres[] = "(gi.wf_status<>'aborted')";
$where = implode(' and ', $wheres);
$inst_list = $this->GUI->gui_list_user_instances($GLOBALS['phpgw_info']['user']['account_id'], -1,-1, $sort_mode, '',$where);
//_debug_array($inst_list['data']);
report_show_instances($inst_list['data'], $this->wf_template);
//Submit options we want
$GLOBALS['workflow']['submit_array']['ActClose'] = lang('Close');
}

?>      ]]></code>      <template><![CDATA[<!--******************** ROWS ********************* -->
<table width="100%">
 <tr class="row_off">
   <td colspan="4">Here, with a standalone activity, we have a view on all instances for this process</td>
 </tr>
<tr class="th">
    <td>{head_inst_priority}</td>
    <td>{head_inst_name}</td>
    <td>{head_status}</td>
    <td>{head_act_name}</td>
    <td>{head_user}</td>
  </tr>
<!-- BEGIN block_instances_row -->
 <tr class="{row_class}">
    <td>{instance_priority}</td>
    <td>{instance_name}</td>
    <td>{instance_status}</td>
    <td>{activity_name}</td>
    <td>{user}</td>
  </tr>
<!-- END block_instances_row -->
</table>      ]]></template>    </activity>
    <activity>
      <name>end</name>
      <type>end</type>
      <description>default end activity</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>n</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
      </roles>
      <code><![CDATA[<?php
?>      ]]></code>    </activity>
    <activity>
      <name>Automatik</name>
      <type>activity</type>
      <description>non interactive auto-routed activity.
add &quot;Tagged&quot; string at the end of PROPERTY_ONE and PROPERTY_TWO</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>n</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
      </roles>
      <code><![CDATA[<?php
?>      ]]></code>    </activity>
    <activity>
      <name>After-Join</name>
      <type>activity</type>
      <description>Interactive activity after the join to check PROPERTY_ONE and PROPERTY_TWO values</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>y</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
        <role>Role1</role>
      </roles>
      <code><![CDATA[<?php
$array_vars = array(
    'PROPERTY_ONE' => '',
    'PROPERTY_TWO' => '',
);

//--------------------------------------
//
// handling data on the form
//
//--------------------------------------

// init variables with POST and if POST is empty 
// init with the property
foreach ($array_vars as $prop => $value)
{
  $array_vars[$prop] = get_var($prop,'any',$instance->get($prop));
}
//user commands   ****************
$ActNextStage = get_var('ActNextStage','post',false);
$ActClose = get_var('ActClose','post',false);

//--------------------------------------
//
// handling results from the form
//
//--------------------------------------

if (($ActNextStage) || ($ActClose)) 
{
  // saving properties
  // if they changed
  foreach ($array_vars as $prop => $value)
  {
     if ($value != ($instance->get($prop)) ) 
     {
       $instance->set($prop,$value);
     }
  }
  if ($ActNextStage)
  {
     // going to next stage
     $instance->complete();
  }
  elseif($ActClose)
  {
   $GLOBALS['workflow']['__leave_activity']=true;
  } 
} 
else 
{

//--------------------------------------
//
// showing the form
//
//--------------------------------------
  foreach ($array_vars as $prop => $value) 
  {
    $template->set_var(array($prop => $array_vars[$prop]));
  }
// submit options we want
$GLOBALS['workflow']['submit_array']['ActNextStage'] = lang('going to next stage');
$GLOBALS['workflow']['submit_array']['ActClose'] = lang('Close and get back later');
$GLOBALS['workflow']['submit_array']['ActNothing'] = lang('loop for fun');
//special Cancel Value we wont get back here
$GLOBALS['workflow']['submit_array']['__Cancel'] = lang('Quit Without Saving');
  //priority levels we want
$GLOBALS['workflow']['priority_array'] = array( 1 => lang('1 - low'),
        2 => lang('2 - medium'),
        3 => lang('3 - medium but better'),
        4 => lang('4 - high'),
        );
}

?>      ]]></code>      <template><![CDATA[<table width="100%">
 <tr bgcolor="#DDDDDD">
    <td bgcolor="#EEEEEE" width="25%"> <div align="right">PROPERTY ONE&nbsp;:</td>
    <td bgcolor="#E8F0F0" width="25%"> <div align="left"><input type="text" name="PROPERTY_ONE" value="{PROPERTY_ONE}" size="38"></div></td>
    </td>
    <td bgcolor="#EEEEEE" width="25%"> <div align="right">PROPERTY TWO&nbsp;:</div></td>
    <td bgcolor="#E8F0F0" width="25%"> <div align="left"><input type="text" name="PROPERTY_TWO" value="{PROPERTY_TWO}" size="38"></div></td>
  </tr>
</table>      ]]></template>    </activity>
    <activity>
      <name>joiner</name>
      <type>join</type>
      <description>Join activities from left and right and then permits a send to  the end activity when both are Ok</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>n</isInteractive>
      <isAutoRouted>n</isAutoRouted>
      <roles>
        <role>Role1</role>
      </roles>
      <code><![CDATA[<?php
?>      ]]></code>    </activity>
    <activity>
      <name>right branch</name>
      <type>activity</type>
      <description>interactive activity on the right branch</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>y</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
        <role>Role2</role>
      </roles>
      <code><![CDATA[<?php
$array_vars = array(
    'PROPERTY_ONE' => '',
    'PROPERTY_TWO' => '',
);

//--------------------------------------
//
// handling data on the form
//
//--------------------------------------

// init variables with POST and if POST is empty 
// init with the property
foreach ($array_vars as $prop => $value)
{
  $array_vars[$prop] = get_var($prop,'any',$instance->get($prop));
}
//user commands   ****************
$ActNextStage = get_var('ActNextStage','post',false);
$ActClose = get_var('ActClose','post',false);

//--------------------------------------
//
// handling results from the form
//
//--------------------------------------

if (($ActNextStage) || ($ActClose)) 
{
  // saving properties
  // if they changed
  foreach ($array_vars as $prop => $value)
  {
     if ($value != ($instance->get($prop)) ) 
     {
       $instance->set($prop,$value);
     }
  }
  if ($ActNextStage)
  {
     // going to next stage
     $instance->complete();
  }
  elseif($ActClose)
  {
   $GLOBALS['workflow']['__leave_activity']=true;
  } 
} 
else 
{

//--------------------------------------
//
// showing the form
//
//--------------------------------------
  foreach ($array_vars as $prop => $value) 
  {
    $template->set_var(array($prop => $array_vars[$prop]));
  }
// submit options we want
$GLOBALS['workflow']['submit_array']['ActNextStage'] = lang('going to next stage');
$GLOBALS['workflow']['submit_array']['ActClose'] = lang('Close and get back later');
//special Cancel Value we wont get back here
$GLOBALS['workflow']['submit_array']['__Cancel'] = lang('Quit Without Saving');
  //priority levels we want
$GLOBALS['workflow']['priority_array'] = array( 1 => lang('1 - low'),
        2 => lang('2 - medium'),
        3 => lang('3 - medium but better'),
        4 => lang('4 - high'),
        );
}

?>      ]]></code>      <template><![CDATA[<!--******************** PROPERTIES ********************* -->
<table width="100%">
 <tr class="th">
   <td colspan="2">Here we are in the 'right branch' activity, we can change properties if we want</td>
 </tr>
 <tr class="row_on">
    <td> <div align="right">PROPERTY ONE&nbsp;:</td>
    <td> <div align="left"><input type="text" name="PROPERTY_ONE" value="{PROPERTY_ONE}" size="38"></div></td>
  </tr>
  <tr class="row_off">
    </td>
    <td> <div align="right">PROPERTY TWO&nbsp;:</div></td>
    <td> <div align="left"><input type="text" name="PROPERTY_TWO" value="{PROPERTY_TWO}" size="38"></div></td>
  </tr>
</table>
      ]]></template>    </activity>
    <activity>
      <name>left branch</name>
      <type>activity</type>
      <description>interactive form activity on the left branch</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>y</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
        <role>Role1</role>
      </roles>
      <code><![CDATA[<?php
$array_vars = array(
    'PROPERTY_ONE' => '',
    'PROPERTY_TWO' => '',
);

//--------------------------------------
//
// handling data on the form
//
//--------------------------------------

// init variables with POST and if POST is empty 
// init with the property
foreach ($array_vars as $prop => $value)
{
  $array_vars[$prop] = get_var($prop,'any',$instance->get($prop));
}
//user commands   ****************
$ActNextStage = get_var('ActNextStage','post',false);
$ActClose = get_var('ActClose','post',false);

//--------------------------------------
//
// handling results from the form
//
//--------------------------------------

if (($ActNextStage) || ($ActClose)) 
{
  // saving properties
  // if they changed
  foreach ($array_vars as $prop => $value)
  {
     if ($value != ($instance->get($prop)) ) 
     {
       $instance->set($prop,$value);
     }
  }
  if ($ActNextStage)
  {
     // going to next stage
     $instance->complete();
  }
  elseif($ActClose)
  {
   $GLOBALS['workflow']['__leave_activity']=true;
  } 
} 
else 
{

//--------------------------------------
//
// showing the form
//
//--------------------------------------
  foreach ($array_vars as $prop => $value) 
  {
    $template->set_var(array($prop => $array_vars[$prop]));
  }
// submit options we want
$GLOBALS['workflow']['submit_array']['ActNextStage'] = lang('going to next stage');
$GLOBALS['workflow']['submit_array']['ActClose'] = lang('Close and get back later');
//special Cancel Value we wont get back here
$GLOBALS['workflow']['submit_array']['__Cancel'] = lang('Quit Without Saving');
  //priority levels we want
$GLOBALS['workflow']['priority_array'] = array( 1 => lang('1 - low'),
        2 => lang('2 - medium'),
        3 => lang('3 - medium but better'),
        4 => lang('4 - high'),
        );
}

?>      ]]></code>      <template><![CDATA[<!--******************** PROPERTIES ********************* -->
<table width="100%">
 <tr class="th">
   <td colspan="2">Here we are in the 'left branch' activity, we can change properties if we want</td>
 </tr>
 <tr class="row_on">
    <td> <div align="right">PROPERTY ONE&nbsp;:</td>
    <td> <div align="left"><input type="text" name="PROPERTY_ONE" value="{PROPERTY_ONE}" size="38"></div></td>
  </tr>
  <tr class="row_off">
    </td>
    <td> <div align="right">PROPERTY TWO&nbsp;:</div></td>
    <td> <div align="left"><input type="text" name="PROPERTY_TWO" value="{PROPERTY_TWO}" size="38"></div></td>
  </tr>
</table>

      ]]></template>    </activity>
    <activity>
      <name>splitter</name>
      <type>split</type>
      <description>splitt the workflow in 2 branches</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>n</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
      </roles>
      <code><![CDATA[<?php
?>      ]]></code>    </activity>
    <activity>
      <name>auto logger</name>
      <type>activity</type>
      <description>log some infos about the state of this process after the start</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>n</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
      </roles>
      <code><![CDATA[<?php
// saving some properties to retain the state we have just after starting
$value = $instance->getName();
$instance->set('auto_logger_NAME_START',$value);
$value = $instance->getPriority();
$instance->set('auto_logger_PRIORITY_START',$value);
$instance->set('auto_logger_USER_START',$GLOBALS['user']);
?>      ]]></code>    </activity>
    <activity>
      <name>start the test</name>
      <type>start</type>
      <description>start activity for this test</description>
      <lastModif>14/06/2005 [04:22:58]</lastModif>
      <isInteractive>y</isInteractive>
      <isAutoRouted>y</isAutoRouted>
      <roles>
        <role>Role1</role>
      </roles>
      <code><![CDATA[<?php

// retrieve submit options ****************
$ActNextStage = get_var('ActNextStage','post',false);

//--------------------------------------
//
// handling results from the form
//
//--------------------------------------

if ($ActNextStage) 
{
     // going to next stage
     $instance->complete();
     // the 'wf_name' and 'wf_priority' special properties are saved in
     // start_pos.php when completing
$instance->setName('toto');
$instance->setPriority($_REQUEST['wf_priority']);
} 
else 
{

//--------------------------------------
//
// let's run_activity show the form
//
//--------------------------------------
   // submit options we want
   $GLOBALS['workflow']['submit_array']['ActNextStage'] = lang('Create this instance');
   //Special cancel value
   $GLOBALS['workflow']['submit_array']['__Cancel'] = lang('Cancel');
   //priority levels we want
   $GLOBALS['workflow']['priority_array'] = array( 1 => lang('1 - low'),
        2 => lang('2 - medium'),
        3 => lang('3 - medium but better'),
        4 => lang('4 - high'),
        );
}
?>      ]]></code>      <template><![CDATA[<!--******************** SPECIAL START PROPERTIES ********************* -->
<table width="100%">
 <tr class="th">
    <td colspan="2">this activity will begin a new test process, an instance will be created</td>
 </tr>
 <tr class="row_on">
    <td> enter here a name for this test instance:</td>
    <td> <input type="text" name="wf_name" value=""</td>
  </tr>

</table>      ]]></template>    </activity>
  </activities>
  <transitions>
     <transition>
       <from>joiner</from>
       <to>After-Join</to>
     </transition>
     <transition>
       <from>auto logger</from>
       <to>splitter</to>
     </transition>
     <transition>
       <from>start the test</from>
       <to>auto logger</to>
     </transition>
     <transition>
       <from>Automatik</from>
       <to>end</to>
     </transition>
     <transition>
       <from>right branch</from>
       <to>joiner</to>
     </transition>
     <transition>
       <from>left branch</from>
       <to>joiner</to>
     </transition>
     <transition>
       <from>After-Join</from>
       <to>Automatik</to>
     </transition>
     <transition>
       <from>splitter</from>
       <to>left branch</to>
     </transition>
     <transition>
       <from>splitter</from>
       <to>right branch</to>
     </transition>
  </transitions>
</process>
