Note for MySQL users:
=====================

InnoDb / MyIsam
===============

THe workflow application is using transactions and Locks.
You should really consider having InnoDb type tables for all your workflow tables 
(i.e.: tables with names starting with 'egw_wf' in your egroupware database).
This will certainly not be as faster as a MyIsam type table but the workflow need
a database working in read and write mode for multiple users, not just a fast directory.

If your database is not supporting transactions and locks you could have some concurrency
problems with users acting on the same parts of the workflow at the same time.
So at least you should consider having only one user using the workflow (...) or maybe only
one user avaible per task and no split activities to ensure tasks (activities) aren't running
at the same time on the same instance.

Concurrent write access
=======================
Concurrent write access could occurs when someone wants to run an activity whose user is 
currently '*'. The workflow engine is setting the current user (if he hasthe right to do it),
preventing any other user to run the activity. This will occurs at each loop on an activity form.

There are some concurrency issues as well when the process handle splitting activities. After a split
you could have n branches of activities running on the same instance, and properties are stored 
on the instance, only one time for n activities.different users saving different versions of the properties
could see some strange things happenning.

You should know as well concurrency is not handled on the administrations forms, that means actually only
one user should edit the processes and activities.